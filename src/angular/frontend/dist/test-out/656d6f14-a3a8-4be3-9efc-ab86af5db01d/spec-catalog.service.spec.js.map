{
  "version": 3,
  "sources": ["src/app/core/services/catalog.service.spec.ts", "src/app/core/services/catalog.service.ts"],
  "sourcesContent": ["import { TestBed } from '@angular/core/testing';\r\nimport { of, throwError } from 'rxjs';\r\n\r\nimport { ApiService } from './api.service';\r\nimport { CatalogItem, CatalogService } from './catalog.service';\r\n\r\ndescribe('CatalogService', () => {\r\n  let service: CatalogService;\r\n  let apiService: jasmine.SpyObj<ApiService>;\r\n\r\n  beforeEach(() => {\r\n    apiService = jasmine.createSpyObj<ApiService>('ApiService', ['get']);\r\n\r\n    TestBed.configureTestingModule({\r\n      providers: [\r\n        CatalogService,\r\n        { provide: ApiService, useValue: apiService }\r\n      ]\r\n    });\r\n\r\n    service = TestBed.inject(CatalogService);\r\n  });\r\n\r\n  it('combina produtos, pacotes e catálogo público sem duplicar itens', (done) => {\r\n    const responses: Record<string, unknown> = {\r\n      '/api/products': [{ id: 1, title: 'E-book', description: 'A', format: 'EBOOK' }],\r\n      '/api/packages': [{ id: 1, title: 'Combo SST', description: 'B', format: 'PACKAGE' }],\r\n      '/public/catalog?type=EBOOK': { items: [{ id: 2, title: 'Checklist', description: 'C', type: 'EBOOK' }] }\r\n    };\r\n\r\n    apiService.get.and.callFake((path: string) => {\r\n      const payload = responses[path] ?? [];\r\n      return of(payload) as any;\r\n    });\r\n\r\n    service.loadCatalog().subscribe(items => {\r\n      expect(items.length).toBeGreaterThanOrEqual(2);\r\n      expect(items.some(item => item.format === 'PACKAGE')).toBeTrue();\r\n      expect(items.some(item => item.format === 'EBOOK' && item.id === '1')).toBeTrue();\r\n      expect(items.some(item => item.format === 'EBOOK' && item.id !== '1')).toBeTrue();\r\n      done();\r\n    });\r\n  });\r\n\r\n  it('fornece fallback quando loadPackages falha', (done) => {\r\n  apiService.get.and.returnValue(throwError(() => new Error('fail')) as any);\r\n\r\n    service.loadPackages().subscribe((items: CatalogItem[]) => {\r\n  expect(items.length).toBeGreaterThan(0);\r\n  expect(items.every((item: CatalogItem) => item.format === 'PACKAGE')).toBeTrue();\r\n      done();\r\n    });\r\n  });\r\n\r\n  it('fornece fallback quando loadEbooks falha', (done) => {\r\n    apiService.get.and.returnValue(throwError(() => new Error('fail')) as any);\r\n\r\n    service.loadEbooks().subscribe((items: CatalogItem[]) => {\r\n      expect(items.length).toBeGreaterThan(0);\r\n      expect(items.every((item: CatalogItem) => item.format === 'EBOOK')).toBeTrue();\r\n      done();\r\n    });\r\n  });\r\n\r\n  it('carrega setores usando o primeiro endpoint bem-sucedido', (done) => {\r\n    apiService.get.and.callFake((path: string) => {\r\n      if (path === '/api/public/catalog/sectors') {\r\n        return throwError(() => new Error('offline')) as any;\r\n      }\r\n      if (path === '/public/catalog/sectors') {\r\n        return of({ items: [{ id: 'ind', name: 'Indústria' }] }) as any;\r\n      }\r\n      return of([]) as any;\r\n    });\r\n\r\n    service.loadSectors().subscribe(sectors => {\r\n      expect(sectors.length).toBe(1);\r\n      const [sector] = sectors;\r\n      expect(sector.id).toBe('ind');\r\n      expect(sector.name).toBe('Indústria');\r\n      done();\r\n    });\r\n  });\r\n});\r\n", "import { Injectable } from '@angular/core';\r\nimport { catchError, defaultIfEmpty, filter, forkJoin, from, map, of, switchMap, take } from 'rxjs';\r\n\r\nimport { ApiService } from './api.service';\r\n\r\nexport type CatalogFormat = 'EBOOK' | 'RECORDED_COURSE' | 'LIVE_TRAINING' | 'PACKAGE';\r\n\r\nexport interface CatalogItem {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  format: CatalogFormat;\r\n  sectors: string[];\r\n  coverImageUrl?: string | null;\r\n  data?: unknown;\r\n}\r\n\r\nexport interface CatalogSector {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CatalogService {\r\n  constructor(private readonly api: ApiService) {}\r\n\r\n  loadCatalog() {\r\n    return forkJoin([\r\n      this.fetchProducts(),\r\n      this.fetchPackages(),\r\n      this.fetchPublicCatalog('EBOOK')\r\n    ]).pipe(\r\n      map(([products, packages, publicEbooks]) => {\r\n        const merged = [...products, ...packages, ...publicEbooks];\r\n        const mapById = new Map<string, CatalogItem>();\r\n        for (const item of merged) {\r\n          const key = `${item.format}::${item.id}`;\r\n          if (!mapById.has(key)) {\r\n            mapById.set(key, item);\r\n          } else {\r\n            const existing = mapById.get(key)!;\r\n            if ((item.description?.length ?? 0) > (existing.description?.length ?? 0)) {\r\n              mapById.set(key, item);\r\n            }\r\n          }\r\n        }\r\n        return Array.from(mapById.values());\r\n      })\r\n    );\r\n  }\r\n\r\n  loadPackages() {\r\n    return this.fetchPackages().pipe(\r\n      catchError(error => {\r\n        console.warn('[CatalogService] falha ao carregar pacotes, usando fallback.', error);\r\n        return of(this.buildPackageFallbacks());\r\n      })\r\n    );\r\n  }\r\n\r\n  loadEbooks() {\r\n    return this.fetchPublicCatalog('EBOOK').pipe(\r\n      catchError(error => {\r\n        console.warn('[CatalogService] falha ao carregar e-books, usando fallback.', error);\r\n        return of(this.buildEbookFallbacks());\r\n      })\r\n    );\r\n  }\r\n\r\n  loadSectors() {\r\n    const endpoints = ['/api/public/catalog/sectors', '/public/catalog/sectors'];\r\n    return from(endpoints).pipe(\r\n      switchMap(endpoint =>\r\n        this.api.get<any>(endpoint).pipe(\r\n          map(response => {\r\n            const list = Array.isArray(response)\r\n              ? response\r\n              : Array.isArray(response?.items)\r\n              ? response.items\r\n              : Array.isArray(response?.data)\r\n              ? response.data\r\n              : [];\r\n            return list.filter(Boolean).map((item: CatalogSector | any) => this.normalizeSector(item));\r\n          }),\r\n          catchError(() => of([] as CatalogSector[]))\r\n        )\r\n      ),\r\n      filter(sectors => sectors.length > 0),\r\n      take(1),\r\n      defaultIfEmpty([] as CatalogSector[])\r\n    );\r\n  }\r\n\r\n  private fetchProducts() {\r\n    return this.api.get<any[]>('/api/products').pipe(\r\n      map(products => (Array.isArray(products) ? products : [])),\r\n      map(products =>\r\n        products.map(product =>\r\n          this.toCatalogItem(product, 'EBOOK', product.coverImageUrl ?? product.imageUrl ?? null)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  private fetchPackages() {\r\n    return this.api.get<any[]>('/api/packages').pipe(\r\n      map(packages => (Array.isArray(packages) ? packages : [])),\r\n      map(packages =>\r\n        packages.map(pkg =>\r\n          this.toCatalogItem(pkg, 'PACKAGE', pkg.coverImageUrl ?? pkg.imageUrl ?? null)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  private fetchPublicCatalog(type: 'EBOOK' | 'RECORDED_COURSE' | 'LIVE_TRAINING') {\r\n    return this.api.get<any>(`/public/catalog?type=${type}`).pipe(\r\n      map(data => {\r\n        const list = Array.isArray(data)\r\n          ? data\r\n          : Array.isArray(data?.items)\r\n          ? data.items\r\n          : Array.isArray(data?.data)\r\n          ? data.data\r\n          : [];\r\n        return list.map((item: any) =>\r\n          this.toCatalogItem(item, type, item.coverImageUrl ?? item.imageUrl ?? null)\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  private toCatalogItem(raw: any, fallbackFormat: CatalogFormat, cover: string | null): CatalogItem {\r\n    const sectors = Array.isArray(raw?.sectors)\r\n      ? raw.sectors\r\n      : Array.isArray(raw?.assignedSectors)\r\n      ? raw.assignedSectors\r\n      : ['global'];\r\n    return {\r\n  id: String(raw?.id ?? raw?.uuid ?? raw?.code ?? `item-${Math.random().toString(36).slice(2, 9)}`),\r\n      title: raw?.title ?? raw?.name ?? 'Item',\r\n      description: raw?.description ?? raw?.shortDescription ?? '',\r\n      format: this.normalizeFormat(raw?.format ?? raw?.type ?? raw?.trainingType) ?? fallbackFormat,\r\n      sectors: sectors.map((sector: any) =>\r\n        typeof sector === 'string' ? sector : sector?.id ?? sector?.code ?? 'global'\r\n      ),\r\n      coverImageUrl: cover || undefined,\r\n      data: raw\r\n    };\r\n  }\r\n\r\n  private normalizeFormat(value: string | undefined): CatalogFormat | null {\r\n    if (!value) {\r\n      return null;\r\n    }\r\n    const normalized = value.toUpperCase();\r\n    if (normalized.includes('EBOOK')) {\r\n      return 'EBOOK';\r\n    }\r\n    if (normalized.includes('RECORDED') || normalized.includes('GRAV')) {\r\n      return 'RECORDED_COURSE';\r\n    }\r\n    if (normalized.includes('LIVE') || normalized.includes('AO_VIVO')) {\r\n      return 'LIVE_TRAINING';\r\n    }\r\n    if (normalized.includes('PACKAGE')) {\r\n      return 'PACKAGE';\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private normalizeSector(sector: CatalogSector | any): CatalogSector {\r\n    return {\r\n      id: String(sector?.id ?? sector?.uuid ?? sector?.code ?? sector?.slug ?? 'global'),\r\n      name: sector?.name ?? sector?.title ?? sector?.label ?? 'Setor'\r\n    };\r\n  }\r\n\r\n  private buildPackageFallbacks(): CatalogItem[] {\r\n    return [\r\n      {\r\n        id: 'pkg-leadership-sst',\r\n        title: 'Programa de Liderança em SST',\r\n        description:\r\n          'Sequência completa de workshops e materiais focados em fortalecer a cultura de segurança ocupacional nas organizações.',\r\n        format: 'PACKAGE',\r\n        sectors: ['global']\r\n      },\r\n      {\r\n        id: 'pkg-onboarding',\r\n        title: 'Onboarding de Segurança para Novos Colaboradores',\r\n        description:\r\n          'Trilha guiada com vídeos, checklists e avaliações rápidas para integrar novas pessoas aos protocolos de SST.',\r\n        format: 'PACKAGE',\r\n        sectors: ['industria', 'servicos']\r\n      },\r\n      {\r\n        id: 'pkg-bem-estar',\r\n        title: 'Jornada de Bem-estar & Ergonomia',\r\n        description:\r\n          'Planos mensais com conteúdos multimídia para reduzir afastamentos, prevenir lesões e promover hábitos saudáveis.',\r\n        format: 'PACKAGE',\r\n        sectors: ['saude', 'global']\r\n      }\r\n    ];\r\n  }\r\n\r\n  private buildEbookFallbacks(): CatalogItem[] {\r\n    return [\r\n      {\r\n        id: 'ebook-ergonomia-escritorio',\r\n        title: 'Ergonomia Essencial para Escritórios',\r\n        description:\r\n          'Guia prático com orientações, exercícios e checklists para organizar postos de trabalho e reduzir lesões.',\r\n        format: 'EBOOK',\r\n        sectors: ['administrativo', 'global']\r\n      },\r\n      {\r\n        id: 'ebook-gestao-riscos',\r\n        title: 'Gestão de Riscos Ocupacionais Simplificada',\r\n        description:\r\n          'Material base para implementar programas de prevenção com linguagem acessível e modelos editáveis.',\r\n        format: 'EBOOK',\r\n        sectors: ['industria', 'servicos']\r\n      },\r\n      {\r\n        id: 'ebook-bem-estar',\r\n        title: 'Bem-estar Mental no Trabalho',\r\n        description:\r\n          'Conteúdo curado com práticas de acolhimento e políticas para cuidar da saúde emocional das equipes.',\r\n        format: 'EBOOK',\r\n        sectors: ['recursos-humanos', 'global']\r\n      }\r\n    ];\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;;;;ACHA;AACA;AAEA;AAoBO,IAAM,iBAAN,MAAMA,gBAAc;EACI;EAA7B,YAA6B,KAAe;AAAf,SAAA,MAAA;EAAkB;EAE/C,cAAW;AACT,WAAO,SAAS;MACd,KAAK,cAAa;MAClB,KAAK,cAAa;MAClB,KAAK,mBAAmB,OAAO;KAChC,EAAE,KACD,IAAI,CAAC,CAAC,UAAU,UAAU,YAAY,MAAK;AACzC,YAAM,SAAS,CAAC,GAAG,UAAU,GAAG,UAAU,GAAG,YAAY;AACzD,YAAM,UAAU,oBAAI,IAAG;AACvB,iBAAW,QAAQ,QAAQ;AACzB,cAAM,MAAM,GAAG,KAAK,MAAM,KAAK,KAAK,EAAE;AACtC,YAAI,CAAC,QAAQ,IAAI,GAAG,GAAG;AACrB,kBAAQ,IAAI,KAAK,IAAI;QACvB,OAAO;AACL,gBAAM,WAAW,QAAQ,IAAI,GAAG;AAChC,eAAK,KAAK,aAAa,UAAU,MAAM,SAAS,aAAa,UAAU,IAAI;AACzE,oBAAQ,IAAI,KAAK,IAAI;UACvB;QACF;MACF;AACA,aAAO,MAAM,KAAK,QAAQ,OAAM,CAAE;IACpC,CAAC,CAAC;EAEN;EAEA,eAAY;AACV,WAAO,KAAK,cAAa,EAAG,KAC1B,WAAW,WAAQ;AACjB,cAAQ,KAAK,gEAAgE,KAAK;AAClF,aAAO,GAAG,KAAK,sBAAqB,CAAE;IACxC,CAAC,CAAC;EAEN;EAEA,aAAU;AACR,WAAO,KAAK,mBAAmB,OAAO,EAAE,KACtC,WAAW,WAAQ;AACjB,cAAQ,KAAK,gEAAgE,KAAK;AAClF,aAAO,GAAG,KAAK,oBAAmB,CAAE;IACtC,CAAC,CAAC;EAEN;EAEA,cAAW;AACT,UAAM,YAAY,CAAC,+BAA+B,yBAAyB;AAC3E,WAAO,KAAK,SAAS,EAAE,KACrB,UAAU,cACR,KAAK,IAAI,IAAS,QAAQ,EAAE,KAC1B,IAAI,cAAW;AACb,YAAM,OAAO,MAAM,QAAQ,QAAQ,IAC/B,WACA,MAAM,QAAQ,UAAU,KAAK,IAC7B,SAAS,QACT,MAAM,QAAQ,UAAU,IAAI,IAC5B,SAAS,OACT,CAAA;AACJ,aAAO,KAAK,OAAO,OAAO,EAAE,IAAI,CAAC,SAA8B,KAAK,gBAAgB,IAAI,CAAC;IAC3F,CAAC,GACD,WAAW,MAAM,GAAG,CAAA,CAAqB,CAAC,CAAC,CAC5C,GAEH,OAAO,aAAW,QAAQ,SAAS,CAAC,GACpC,KAAK,CAAC,GACN,eAAe,CAAA,CAAqB,CAAC;EAEzC;EAEQ,gBAAa;AACnB,WAAO,KAAK,IAAI,IAAW,eAAe,EAAE,KAC1C,IAAI,cAAa,MAAM,QAAQ,QAAQ,IAAI,WAAW,CAAA,CAAG,GACzD,IAAI,cACF,SAAS,IAAI,aACX,KAAK,cAAc,SAAS,SAAS,QAAQ,iBAAiB,QAAQ,YAAY,IAAI,CAAC,CACxF,CACF;EAEL;EAEQ,gBAAa;AACnB,WAAO,KAAK,IAAI,IAAW,eAAe,EAAE,KAC1C,IAAI,cAAa,MAAM,QAAQ,QAAQ,IAAI,WAAW,CAAA,CAAG,GACzD,IAAI,cACF,SAAS,IAAI,SACX,KAAK,cAAc,KAAK,WAAW,IAAI,iBAAiB,IAAI,YAAY,IAAI,CAAC,CAC9E,CACF;EAEL;EAEQ,mBAAmB,MAAmD;AAC5E,WAAO,KAAK,IAAI,IAAS,wBAAwB,IAAI,EAAE,EAAE,KACvD,IAAI,UAAO;AACT,YAAM,OAAO,MAAM,QAAQ,IAAI,IAC3B,OACA,MAAM,QAAQ,MAAM,KAAK,IACzB,KAAK,QACL,MAAM,QAAQ,MAAM,IAAI,IACxB,KAAK,OACL,CAAA;AACJ,aAAO,KAAK,IAAI,CAAC,SACf,KAAK,cAAc,MAAM,MAAM,KAAK,iBAAiB,KAAK,YAAY,IAAI,CAAC;IAE/E,CAAC,CAAC;EAEN;EAEQ,cAAc,KAAU,gBAA+B,OAAoB;AACjF,UAAM,UAAU,MAAM,QAAQ,KAAK,OAAO,IACtC,IAAI,UACJ,MAAM,QAAQ,KAAK,eAAe,IAClC,IAAI,kBACJ,CAAC,QAAQ;AACb,WAAO;MACT,IAAI,OAAO,KAAK,MAAM,KAAK,QAAQ,KAAK,QAAQ,QAAQ,KAAK,OAAM,EAAG,SAAS,EAAE,EAAE,MAAM,GAAG,CAAC,CAAC,EAAE;MAC5F,OAAO,KAAK,SAAS,KAAK,QAAQ;MAClC,aAAa,KAAK,eAAe,KAAK,oBAAoB;MAC1D,QAAQ,KAAK,gBAAgB,KAAK,UAAU,KAAK,QAAQ,KAAK,YAAY,KAAK;MAC/E,SAAS,QAAQ,IAAI,CAAC,WACpB,OAAO,WAAW,WAAW,SAAS,QAAQ,MAAM,QAAQ,QAAQ,QAAQ;MAE9E,eAAe,SAAS;MACxB,MAAM;;EAEV;EAEQ,gBAAgB,OAAyB;AAC/C,QAAI,CAAC,OAAO;AACV,aAAO;IACT;AACA,UAAM,aAAa,MAAM,YAAW;AACpC,QAAI,WAAW,SAAS,OAAO,GAAG;AAChC,aAAO;IACT;AACA,QAAI,WAAW,SAAS,UAAU,KAAK,WAAW,SAAS,MAAM,GAAG;AAClE,aAAO;IACT;AACA,QAAI,WAAW,SAAS,MAAM,KAAK,WAAW,SAAS,SAAS,GAAG;AACjE,aAAO;IACT;AACA,QAAI,WAAW,SAAS,SAAS,GAAG;AAClC,aAAO;IACT;AACA,WAAO;EACT;EAEQ,gBAAgB,QAA2B;AACjD,WAAO;MACL,IAAI,OAAO,QAAQ,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ;MACjF,MAAM,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,SAAS;;EAE5D;EAEQ,wBAAqB;AAC3B,WAAO;MACL;QACE,IAAI;QACJ,OAAO;QACP,aACE;QACF,QAAQ;QACR,SAAS,CAAC,QAAQ;;MAEpB;QACE,IAAI;QACJ,OAAO;QACP,aACE;QACF,QAAQ;QACR,SAAS,CAAC,aAAa,UAAU;;MAEnC;QACE,IAAI;QACJ,OAAO;QACP,aACE;QACF,QAAQ;QACR,SAAS,CAAC,SAAS,QAAQ;;;EAGjC;EAEQ,sBAAmB;AACzB,WAAO;MACL;QACE,IAAI;QACJ,OAAO;QACP,aACE;QACF,QAAQ;QACR,SAAS,CAAC,kBAAkB,QAAQ;;MAEtC;QACE,IAAI;QACJ,OAAO;QACP,aACE;QACF,QAAQ;QACR,SAAS,CAAC,aAAa,UAAU;;MAEnC;QACE,IAAI;QACJ,OAAO;QACP,aACE;QACF,QAAQ;QACR,SAAS,CAAC,oBAAoB,QAAQ;;;EAG5C;;;;;AAnNW,iBAAc,WAAA;EAD1B,WAAW,EAAE,YAAY,OAAM,CAAE;GACrB,cAAc;;;ADjB3B,SAAS,kBAAkB,MAAK;AAC9B,MAAI;AACJ,MAAI;AAEJ,aAAW,MAAK;AACd,iBAAa,QAAQ,aAAyB,cAAc,CAAC,KAAK,CAAC;AAEnE,YAAQ,uBAAuB;MAC7B,WAAW;QACT;QACA,EAAE,SAAS,YAAY,UAAU,WAAU;;KAE9C;AAED,cAAU,QAAQ,OAAO,cAAc;EACzC,CAAC;AAED,KAAG,yEAAmE,CAAC,SAAQ;AAC7E,UAAM,YAAqC;MACzC,iBAAiB,CAAC,EAAE,IAAI,GAAG,OAAO,UAAU,aAAa,KAAK,QAAQ,QAAO,CAAE;MAC/E,iBAAiB,CAAC,EAAE,IAAI,GAAG,OAAO,aAAa,aAAa,KAAK,QAAQ,UAAS,CAAE;MACpF,8BAA8B,EAAE,OAAO,CAAC,EAAE,IAAI,GAAG,OAAO,aAAa,aAAa,KAAK,MAAM,QAAO,CAAE,EAAC;;AAGzG,eAAW,IAAI,IAAI,SAAS,CAAC,SAAgB;AAC3C,YAAM,UAAU,UAAU,IAAI,KAAK,CAAA;AACnC,aAAO,GAAG,OAAO;IACnB,CAAC;AAED,YAAQ,YAAW,EAAG,UAAU,WAAQ;AACtC,aAAO,MAAM,MAAM,EAAE,uBAAuB,CAAC;AAC7C,aAAO,MAAM,KAAK,UAAQ,KAAK,WAAW,SAAS,CAAC,EAAE,SAAQ;AAC9D,aAAO,MAAM,KAAK,UAAQ,KAAK,WAAW,WAAW,KAAK,OAAO,GAAG,CAAC,EAAE,SAAQ;AAC/E,aAAO,MAAM,KAAK,UAAQ,KAAK,WAAW,WAAW,KAAK,OAAO,GAAG,CAAC,EAAE,SAAQ;AAC/E,WAAI;IACN,CAAC;EACH,CAAC;AAED,KAAG,8CAA8C,CAAC,SAAQ;AAC1D,eAAW,IAAI,IAAI,YAAY,WAAW,MAAM,IAAI,MAAM,MAAM,CAAC,CAAQ;AAEvE,YAAQ,aAAY,EAAG,UAAU,CAAC,UAAwB;AAC5D,aAAO,MAAM,MAAM,EAAE,gBAAgB,CAAC;AACtC,aAAO,MAAM,MAAM,CAAC,SAAsB,KAAK,WAAW,SAAS,CAAC,EAAE,SAAQ;AAC1E,WAAI;IACN,CAAC;EACH,CAAC;AAED,KAAG,4CAA4C,CAAC,SAAQ;AACtD,eAAW,IAAI,IAAI,YAAY,WAAW,MAAM,IAAI,MAAM,MAAM,CAAC,CAAQ;AAEzE,YAAQ,WAAU,EAAG,UAAU,CAAC,UAAwB;AACtD,aAAO,MAAM,MAAM,EAAE,gBAAgB,CAAC;AACtC,aAAO,MAAM,MAAM,CAAC,SAAsB,KAAK,WAAW,OAAO,CAAC,EAAE,SAAQ;AAC5E,WAAI;IACN,CAAC;EACH,CAAC;AAED,KAAG,2DAA2D,CAAC,SAAQ;AACrE,eAAW,IAAI,IAAI,SAAS,CAAC,SAAgB;AAC3C,UAAI,SAAS,+BAA+B;AAC1C,eAAO,WAAW,MAAM,IAAI,MAAM,SAAS,CAAC;MAC9C;AACA,UAAI,SAAS,2BAA2B;AACtC,eAAO,GAAG,EAAE,OAAO,CAAC,EAAE,IAAI,OAAO,MAAM,eAAW,CAAE,EAAC,CAAE;MACzD;AACA,aAAO,GAAG,CAAA,CAAE;IACd,CAAC;AAED,YAAQ,YAAW,EAAG,UAAU,aAAU;AACxC,aAAO,QAAQ,MAAM,EAAE,KAAK,CAAC;AAC7B,YAAM,CAAC,MAAM,IAAI;AACjB,aAAO,OAAO,EAAE,EAAE,KAAK,KAAK;AAC5B,aAAO,OAAO,IAAI,EAAE,KAAK,cAAW;AACpC,WAAI;IACN,CAAC;EACH,CAAC;AACH,CAAC;",
  "names": ["CatalogService"]
}
